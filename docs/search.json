[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lab 10: Distances and the Border Zone",
    "section": "",
    "text": "Load libraries\n\n# spatial data science\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(units)\n\nudunits database from /Library/Frameworks/R.framework/Versions/4.5-x86_64/Resources/library/units/share/udunits/udunits2.xml\n\nlibrary(dplyr)\nlibrary(flextable)\n\n\nAttaching package: 'flextable'\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(maps)\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(flextable)\n\n# Data\nlibrary(AOI)\n\n\nAttaching package: 'AOI'\n\nThe following object is masked from 'package:tigris':\n\n    list_states\n\nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires)\n\n# Visualization\nlibrary(gghighlight)\nlibrary(ggrepel)\nlibrary(knitr)\n\n\nQuestion 1\n\n#equal area projection \neqdc &lt;- 5070\n\naoi_get(country = c(\"MX\", \"CA\", \"USA\"))\n\nSimple feature collection with 3 features and 168 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -171.7911 ymin: 14.53883 xmax: -52.6481 ymax: 83.23324\nGeodetic CRS:  WGS 84\n        featurecla scalerank labelrank               sovereignt sov_a3 adm0_dif\n4  Admin-0 country         1         2                   Canada    CAN        0\n5  Admin-0 country         1         2 United States of America    US1        1\n28 Admin-0 country         1         2                   Mexico    MEX        0\n   level              type tlc                    admin adm0_a3 geou_dif\n4      2 Sovereign country   1                   Canada     CAN        0\n5      2           Country   1 United States of America     USA        0\n28     2 Sovereign country   1                   Mexico     MEX        0\n                    geounit gu_a3 su_dif       subunit su_a3 brk_diff\n4                    Canada   CAN      0        Canada   CAN        0\n5  United States of America   USA      0 United States   USA        0\n28                   Mexico   MEX      0        Mexico   MEX        0\n                       name     name_long brk_a3      brk_name brk_group abbrev\n4                    Canada        Canada    CAN        Canada      &lt;NA&gt;   Can.\n5  United States of America United States    USA United States      &lt;NA&gt; U.S.A.\n28                   Mexico        Mexico    MEX        Mexico      &lt;NA&gt;   Mex.\n   postal                formal_en formal_fr    name_ciawf note_adm0 note_brk\n4      CA                   Canada      &lt;NA&gt;        Canada      &lt;NA&gt;     &lt;NA&gt;\n5      US United States of America      &lt;NA&gt; United States      &lt;NA&gt;     &lt;NA&gt;\n28     MX    United Mexican States      &lt;NA&gt;        Mexico      &lt;NA&gt;     &lt;NA&gt;\n                  name_sort name_alt mapcolor7 mapcolor8 mapcolor9 mapcolor13\n4                    Canada     &lt;NA&gt;         6         6         2          2\n5  United States of America     &lt;NA&gt;         4         5         1          1\n28                   Mexico     &lt;NA&gt;         6         1         7          3\n     pop_est pop_rank pop_year   gdp_md gdp_year                  economy\n4   37589262       15     2019  1736425     2019  1. Developed region: G7\n5  328239523       17     2019 21433226     2019  1. Developed region: G7\n28 127575529       17     2019  1268870     2019 4. Emerging region: MIKT\n               income_grp fips_10 iso_a2 iso_a2_eh iso_a3 iso_a3_eh iso_n3\n4    1. High income: OECD      CA     CA        CA    CAN       CAN    124\n5    1. High income: OECD      US     US        US    USA       USA    840\n28 3. Upper middle income      MX     MX        MX    MEX       MEX    484\n   iso_n3_eh un_a3 wb_a2 wb_a3   woe_id woe_id_eh                   woe_note\n4        124   124    CA   CAN 23424775  23424775 Exact WOE match as country\n5        840   840    US   USA 23424977  23424977 Exact WOE match as country\n28       484   484    MX   MEX 23424900  23424900 Exact WOE match as country\n   adm0_iso adm0_diff adm0_tlc adm0_a3_us adm0_a3_fr adm0_a3_ru adm0_a3_es\n4       CAN      &lt;NA&gt;      CAN        CAN        CAN        CAN        CAN\n5       USA      &lt;NA&gt;      USA        USA        USA        USA        USA\n28      MEX      &lt;NA&gt;      MEX        MEX        MEX        MEX        MEX\n   adm0_a3_cn adm0_a3_tw adm0_a3_in adm0_a3_np adm0_a3_pk adm0_a3_de adm0_a3_gb\n4         CAN        CAN        CAN        CAN        CAN        CAN        CAN\n5         USA        USA        USA        USA        USA        USA        USA\n28        MEX        MEX        MEX        MEX        MEX        MEX        MEX\n   adm0_a3_br adm0_a3_il adm0_a3_ps adm0_a3_sa adm0_a3_eg adm0_a3_ma adm0_a3_pt\n4         CAN        CAN        CAN        CAN        CAN        CAN        CAN\n5         USA        USA        USA        USA        USA        USA        USA\n28        MEX        MEX        MEX        MEX        MEX        MEX        MEX\n   adm0_a3_ar adm0_a3_jp adm0_a3_ko adm0_a3_vn adm0_a3_tr adm0_a3_id adm0_a3_pl\n4         CAN        CAN        CAN        CAN        CAN        CAN        CAN\n5         USA        USA        USA        USA        USA        USA        USA\n28        MEX        MEX        MEX        MEX        MEX        MEX        MEX\n   adm0_a3_gr adm0_a3_it adm0_a3_nl adm0_a3_se adm0_a3_bd adm0_a3_ua adm0_a3_un\n4         CAN        CAN        CAN        CAN        CAN        CAN        -99\n5         USA        USA        USA        USA        USA        USA        -99\n28        MEX        MEX        MEX        MEX        MEX        MEX        -99\n   adm0_a3_wb     continent region_un        subregion\n4         -99 North America  Americas Northern America\n5         -99 North America  Americas Northern America\n28        -99 North America  Americas  Central America\n                   region_wb name_len long_len abbrev_len tiny homepart\n4              North America        6        6          4  -99        1\n5              North America       24       13          6  -99        1\n28 Latin America & Caribbean        6        6          4  -99        1\n   min_zoom min_label max_label   label_x  label_y      ne_id wikidataid\n4         0       1.7       5.7 -101.9107 60.32429 1159320467        Q16\n5         0       1.7       5.7  -97.4826 39.53848 1159321369        Q30\n28        0       2.0       6.7 -102.2894 23.91999 1159321055        Q96\n            name_ar         name_bn            name_de                  name_en\n4              كندا          কানাডা             Kanada                   Canada\n5  الولايات المتحدة মার্কিন যুক্তরাষ্ট্র Vereinigte Staaten United States of America\n28          المكسيك         মেক্সিকো             Mexiko                   Mexico\n          name_es             name_fa    name_fr                     name_el\n4          Canadá              کانادا     Canada                     Καναδάς\n5  Estados Unidos ایالات متحده آمریکا États-Unis Ηνωμένες Πολιτείες Αμερικής\n28         México               مکزیک    Mexique                      Μεξικό\n       name_he          name_hi                   name_hu         name_id\n4         קנדה            कनाडा                    Kanada          Kanada\n5  ארצות הברית संयुक्त राज्य अमेरिका Amerikai Egyesült Államok Amerika Serikat\n28      מקסיקו           मेक्सिको                    Mexikó         Meksiko\n                 name_it        name_ja name_ko                      name_nl\n4                 Canada         カナダ  캐나다                       Canada\n5  Stati Uniti d'America アメリカ合衆国    미국 Verenigde Staten van Amerika\n28               Messico       メキシコ  멕시코                       Mexico\n             name_pl        name_pt name_ru name_sv                     name_tr\n4             Kanada         Canadá  Канада  Kanada                      Kanada\n5  Stany Zjednoczone Estados Unidos     США     USA Amerika Birleşik Devletleri\n28            Meksyk         México Мексика  Mexiko                     Meksika\n                   name_uk                name_ur name_vi name_zh name_zht\n4                   Канада                 کینیڈا  Canada  加拿大   加拿大\n5  Сполучені Штати Америки ریاستہائے متحدہ امریکا  Hoa Kỳ    美国     美國\n28                 Мексика                میکسیکو  México  墨西哥   墨西哥\n        fclass_iso tlc_diff      fclass_tlc fclass_us fclass_fr fclass_ru\n4  Admin-0 country     &lt;NA&gt; Admin-0 country      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5  Admin-0 country     &lt;NA&gt; Admin-0 country      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28 Admin-0 country     &lt;NA&gt; Admin-0 country      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_es fclass_cn fclass_tw fclass_in fclass_np fclass_pk fclass_de\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_gb fclass_br fclass_il fclass_ps fclass_sa fclass_eg fclass_ma\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_pt fclass_ar fclass_jp fclass_ko fclass_vn fclass_tr fclass_id\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n   fclass_pl fclass_gr fclass_it fclass_nl fclass_se fclass_bd fclass_ua\n4       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n5       &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n28      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;      &lt;NA&gt;\n                         geometry\n4  MULTIPOLYGON (((-122.84 49,...\n5  MULTIPOLYGON (((-122.84 49,...\n28 MULTIPOLYGON (((-117.1278 3...\n\n#load in city data \nuscities &lt;- read_csv(\"data/uscities.csv\")\n\nRows: 31254 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): city, city_ascii, state_id, state_name, county_fips, county_name, s...\ndbl (6): lat, lng, population, density, ranking, id\nlgl (2): military, incorporated\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#explore city data \n\nhead(uscities)\n\n# A tibble: 6 × 17\n  city       city_ascii state_id state_name county_fips county_name   lat    lng\n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;\n1 New York   New York   NY       New York   36081       Queens       40.7  -73.9\n2 Los Angel… Los Angel… CA       California 06037       Los Angeles  34.1 -118. \n3 Chicago    Chicago    IL       Illinois   17031       Cook         41.8  -87.7\n4 Miami      Miami      FL       Florida    12086       Miami-Dade   25.8  -80.2\n5 Houston    Houston    TX       Texas      48201       Harris       29.8  -95.4\n6 Dallas     Dallas     TX       Texas      48113       Dallas       32.8  -96.8\n# ℹ 9 more variables: population &lt;dbl&gt;, density &lt;dbl&gt;, source &lt;chr&gt;,\n#   military &lt;lgl&gt;, incorporated &lt;lgl&gt;, timezone &lt;chr&gt;, ranking &lt;dbl&gt;,\n#   zips &lt;chr&gt;, id &lt;dbl&gt;\n\n# Explore US cities data \nstr(uscities)\n\nspc_tbl_ [31,254 × 17] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ city        : chr [1:31254] \"New York\" \"Los Angeles\" \"Chicago\" \"Miami\" ...\n $ city_ascii  : chr [1:31254] \"New York\" \"Los Angeles\" \"Chicago\" \"Miami\" ...\n $ state_id    : chr [1:31254] \"NY\" \"CA\" \"IL\" \"FL\" ...\n $ state_name  : chr [1:31254] \"New York\" \"California\" \"Illinois\" \"Florida\" ...\n $ county_fips : chr [1:31254] \"36081\" \"06037\" \"17031\" \"12086\" ...\n $ county_name : chr [1:31254] \"Queens\" \"Los Angeles\" \"Cook\" \"Miami-Dade\" ...\n $ lat         : num [1:31254] 40.7 34.1 41.8 25.8 29.8 ...\n $ lng         : num [1:31254] -73.9 -118.4 -87.7 -80.2 -95.4 ...\n $ population  : num [1:31254] 18832416 11885717 8489066 6113982 6046392 ...\n $ density     : num [1:31254] 10944 3166 4590 4791 1386 ...\n $ source      : chr [1:31254] \"shape\" \"shape\" \"shape\" \"shape\" ...\n $ military    : logi [1:31254] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ incorporated: logi [1:31254] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ timezone    : chr [1:31254] \"America/New_York\" \"America/Los_Angeles\" \"America/Chicago\" \"America/New_York\" ...\n $ ranking     : num [1:31254] 1 1 1 1 1 1 1 1 1 1 ...\n $ zips        : chr [1:31254] \"11229 11226 11225 11224 11223 11221 11220 11385 10169 10168 10167 10165 10162 10282 10280 10040 10044 11109 111\"| __truncated__ \"90291 90293 90292 91316 91311 90035 90034 90037 90031 90039 90008 90004 90005 90006 90007 90001 90002 90003 915\"| __truncated__ \"60018 60649 60641 60640 60643 60642 60645 60644 60647 60646 60616 60617 60614 60615 60612 60613 60610 60611 606\"| __truncated__ \"33128 33129 33125 33126 33127 33149 33144 33145 33142 33139 33138 33137 33136 33135 33134 33133 33132 33131 331\"| __truncated__ ...\n $ id          : num [1:31254] 1.84e+09 1.84e+09 1.84e+09 1.84e+09 1.84e+09 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   city = col_character(),\n  ..   city_ascii = col_character(),\n  ..   state_id = col_character(),\n  ..   state_name = col_character(),\n  ..   county_fips = col_character(),\n  ..   county_name = col_character(),\n  ..   lat = col_double(),\n  ..   lng = col_double(),\n  ..   population = col_double(),\n  ..   density = col_double(),\n  ..   source = col_character(),\n  ..   military = col_logical(),\n  ..   incorporated = col_logical(),\n  ..   timezone = col_character(),\n  ..   ranking = col_double(),\n  ..   zips = col_character(),\n  ..   id = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nsummary(uscities)\n\n     city            city_ascii          state_id          state_name       \n Length:31254       Length:31254       Length:31254       Length:31254      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n county_fips        county_name             lat             lng         \n Length:31254       Length:31254       Min.   :17.96   Min.   :-176.63  \n Class :character   Class :character   1st Qu.:35.19   1st Qu.: -98.23  \n Mode  :character   Mode  :character   Median :39.35   Median : -90.04  \n                                       Mean   :38.63   Mean   : -92.80  \n                                       3rd Qu.:41.71   3rd Qu.: -81.76  \n                                       Max.   :71.27   Max.   : 174.11  \n   population           density           source           military      \n Min.   :0.000e+00   Min.   :    0.0   Length:31254       Mode :logical  \n 1st Qu.:2.702e+02   1st Qu.:   89.0   Class :character   FALSE:31158    \n Median :9.480e+02   Median :  246.1   Mode  :character   TRUE :96       \n Mean   :1.287e+04   Mean   :  465.5                                     \n 3rd Qu.:3.761e+03   3rd Qu.:  547.6                                     \n Max.   :1.883e+07   Max.   :28653.9                                     \n incorporated      timezone            ranking          zips          \n Mode :logical   Length:31254       Min.   :1.000   Length:31254      \n FALSE:10964     Class :character   1st Qu.:3.000   Class :character  \n TRUE :20290     Mode  :character   Median :3.000   Mode  :character  \n                                    Mean   :2.994                     \n                                    3rd Qu.:3.000                     \n                                    Max.   :5.000                     \n       id           \n Min.   :1.630e+09  \n 1st Qu.:1.840e+09  \n Median :1.840e+09  \n Mean   :1.838e+09  \n 3rd Qu.:1.840e+09  \n Max.   :1.840e+09  \n\nnames(uscities)\n\n [1] \"city\"         \"city_ascii\"   \"state_id\"     \"state_name\"   \"county_fips\" \n [6] \"county_name\"  \"lat\"          \"lng\"          \"population\"   \"density\"     \n[11] \"source\"       \"military\"     \"incorporated\" \"timezone\"     \"ranking\"     \n[16] \"zips\"         \"id\"          \n\n# Convert to spatial object \nuscities_sf &lt;- uscities %&gt;%\n  st_as_sf(coords = c(\"lng\", \"lat\"), crs = 4326, remove = FALSE)\n\n#filter out the states we don't need \nuscities_border &lt;- uscities_sf %&gt;%\n  filter(!state_name %in% c(\"Alaska\", \"Hawaii\", \"Puerto Rico\"))\n\n#reproject for distance measurements \nuscities_border_proj &lt;- st_transform(uscities_border, crs = 5070) \n\n\n\nQuestion 2\nCreate Resolved State Boundaries\n\n#make data frame with us state names and their centers \ndf &lt;- data.frame(name = state.name, \n                 X = state.center$x,\n                 Y = state.center$y)\n\n#turn data frame into sparial object usinf the x/y coordinates \ncities &lt;- st_as_sf(df, coords = c(\"X\", \"Y\"), crs = 4326)\n\n\nstates &lt;- USAboundaries::us_states(resolution = \"low\") |&gt;\n  filter(!state_abbr %in% c(\"HI\", \"AK\", \"PR\")) |&gt;\n  st_transform(eqdc)\n\n#merge all states into one polygon\nus_union &lt;- st_union(states)\n\n#get just the boundary of the states \nus_boundaries &lt;- st_boundary(us_union)\n\n#project city points into right coordinate system \ncities_proj &lt;- st_transform(cities, crs = eqdc)\n\n#make map of boundaries \ncities_proj &lt;- uscities_border_proj  \nus_boundaries &lt;- st_cast(us_boundaries, \"MULTILINESTRING\")\nplot(us_boundaries, col = \"black\", lwd = 0.5, main = \"Resolved State Boundaries\")\n\n\n\n\n\n\n\n\nCreate boundaries and Calculate City Distances to them.\nI calculated and added all the distances needed at once and then will create the tables below\n\n#create state borders \nstate_boundaries &lt;- st_combine(states) |&gt;\n  st_boundary() |&gt;\n  st_cast(\"MULTILINESTRING\")\n\n#Downladed the North America data, then made it spatial \nnorth_america &lt;- ne_countries(continent = \"North America\", returnclass = \"sf\") |&gt;\n  st_transform(crs = eqdc)\n\n#define borders \n\n#mexico\nmexico &lt;- north_america |&gt; filter(admin == \"Mexico\")\n\n#canada \ncanada &lt;- north_america |&gt; filter(admin == \"Canada\")\n\n#find boundaries of the countries , make a multistring \n\nmex_border &lt;- st_boundary(mexico) |&gt; st_cast(\"MULTILINESTRING\")\n\ncan_border &lt;- st_boundary(canada) |&gt; st_cast(\"MULTILINESTRING\")\n\n\n#add the distances to the borders we are interested to the city data frame\ncities_with_distances &lt;- uscities_border_proj |&gt;\n  mutate(\n    dist_to_national_km = st_distance(geometry, us_boundaries) |&gt; set_units(\"km\") |&gt; drop_units(),\n    dist_to_state_km    = st_distance(geometry, state_boundaries) |&gt; set_units(\"km\") |&gt; drop_units(),\n    dist_to_mexico_km   = st_distance(geometry, mex_border) |&gt; set_units(\"km\") |&gt; drop_units(),\n    dist_to_canada_km   = st_distance(geometry, can_border) |&gt; set_units(\"km\") |&gt; drop_units()\n  )\n\n2.1: Distance to US border/coastline\n\n# Top 5 cities farthest from the US  border\ntop5_farthest_us &lt;- cities_with_distances %&gt;%\n  st_drop_geometry() %&gt;%\n  select(city, state_name, dist_to_national_km) %&gt;%\n  rename(\n    State = state_name,\n    `distance to US border (km)` = dist_to_national_km\n  ) %&gt;%\n  arrange(desc(`distance to US border (km)`)) %&gt;%\n  slice(1:5)\n\nflextable(top5_farthest_us)\n\ncityStatedistance to US border (km)Hill CityKansas1,035.640PalcoKansas1,032.352DresdenKansas1,031.530JenningsKansas1,030.252BogueKansas1,028.531\n\n\n2.2: Distances to state border\n\ntop5_farthest_state &lt;- cities_with_distances %&gt;%\n  st_drop_geometry() %&gt;%\n  select(city, state_name, dist_to_state_km) %&gt;%\n  rename(\n    state = state_name,\n    `distance to state border (km)` = dist_to_state_km\n  ) %&gt;%\n  arrange(desc(`distance to state border (km)`)) %&gt;%\n  slice(1:5)\n\n# Show as flextable\nflextable(top5_farthest_state)\n\ncitystatedistance to state border (km)BriggsTexas313.0450LampasasTexas311.6903BertramTexas307.1177KempnerTexas304.9309FlorenceTexas301.8879\n\n\n2.3: Distance to Mexico\n\n# Top 5 cities farthest from the **Mexican border**\ntop5_farthest_mexico &lt;- cities_with_distances %&gt;%\n  st_drop_geometry() %&gt;%\n  select(city, state_name, dist_to_mexico_km) %&gt;%\n  rename(\n    state = state_name,\n    'distance to Mexico border (km)'= dist_to_mexico_km\n  ) %&gt;% \n  arrange(desc(`distance to Mexico border (km)`)) %&gt;%\n  slice(1:5)\n\nflextable(top5_farthest_mexico)\n\ncitystatedistance to Mexico border (km)Grand IsleMaine3,324.038CaribouMaine3,292.781Presque IsleMaine3,277.282OakfieldMaine3,218.408VanceboroMaine3,207.913\n\n\n2.4: Distance to Canada\n\n# Top 5 cities farthest from the Canadian border\n\ntop5_farthest_canada &lt;- cities_with_distances %&gt;%\n  st_drop_geometry() %&gt;%\n  select(city, state_name, dist_to_canada_km) %&gt;%\n  rename(\n    state = state_name, \n    'distance to Canadian border (km)'= dist_to_canada_km\n  ) %&gt;% \n  arrange(desc(`distance to Canadian border (km)`)) %&gt;%\n  slice(1:5)\n\nflextable(top5_farthest_canada)\n\ncitystatedistance to Canadian border (km)Guadalupe GuerraTexas2,255.590SandovalTexas2,254.783FrontonTexas2,253.938Fronton RanchettesTexas2,251.062EvergreenTexas2,250.952\n\n\n\n\nQuestion 3\n3.1: Data\n\n# The 10 biggest cities by population\ntop10_cities &lt;- uscities_sf %&gt;%\n  arrange(desc(population)) %&gt;%\n  slice(1:10)\n\n#Make the figure \nggplot() +\n  geom_sf(data = north_america, fill = \"lightgray\", color = \"black\", lty = 1, size = 0.5) +\n  geom_sf(data = us_union, fill = NA, color = \"darkblue\", lty = 2, size = 1) +\n  geom_sf(data = states, fill = NA, color = \"black\", lty = 3, size = 0.3) +\n  geom_sf(data = top10_cities, color = \"red\", size = 2) +\n  ggrepel::geom_label_repel(\n    data = top10_cities,\n    aes(label = city, geometry = geometry),\n    stat = \"sf_coordinates\",\n    size = 3,\n    min.segment.length = 0\n  ) +\n  theme_minimal() +\n   ggtitle(\"Top 10 Largest US Cities with North America and State Borders\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n3.2: City Distance from border\n\nhighlight_cities &lt;- cities_with_distances %&gt;%\n  arrange(desc(dist_to_national_km)) %&gt;%\n  slice(1:5)\n\nggplot() +\n  geom_sf(data = cities_with_distances, aes(color = dist_to_national_km), size = 1) +\n  geom_sf(data = highlight_cities, color = \"red\", size = 2) + \n  geom_label_repel(\n    data = highlight_cities,\n    aes(label = city, geometry = geometry),\n    stat = \"sf_coordinates\",\n    size = 3,\n    max.overlaps = 50\n  ) +\n  scale_color_viridis_c(name = \"Distance from National Border (km)\") +\n  theme_minimal() +\n  ggtitle(\"Cities Colored by Distance from U.S. National Border\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n3.3: City Distance to nearest state\n\n# Match by city + state to avoid duplicates, I found that many of the cities had the same names\n# Create a city_state_id column for matching\ncities_with_distances &lt;- cities_with_distances %&gt;%\n  mutate(city_state_id = paste0(city, \", \", state_name))\n\ntop5_farthest_state &lt;- top5_farthest_state %&gt;%\n  mutate(city_state_id = paste0(city, \", \", state))\n\n# Match \nhighlight_state_cities &lt;- cities_with_distances %&gt;%\n  filter(city_state_id %in% top5_farthest_state$city_state_id)\n\n\n# Make the map\nggplot() +\n  geom_sf(data = cities_with_distances, aes(color = dist_to_state_km), size = 1) +\n  geom_sf(data = highlight_state_cities, color = \"red\", size = 2) +\n  geom_label_repel(\n    data = highlight_state_cities,\n    aes(label = paste0(city, \", \", state_name), geometry = geometry),\n    stat = \"sf_coordinates\",\n    size = 3\n  ) +\n  scale_color_viridis_c(name = \"Distance from State Border (km)\") +\n  theme_minimal() +\n  ggtitle(\"Cities Colored by Distance from Nearest State Border\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n3.4: Equidistance boundary from Mexico and Canada\n\n# Create absolute difference column\ncities_with_distances &lt;- cities_with_distances %&gt;%\n  mutate(diff_mex_can = abs(dist_to_mexico_km - dist_to_canada_km))\n\n#  Filter cities within 100 km difference\nequidistant_cities &lt;- cities_with_distances %&gt;%\n  filter(diff_mex_can &lt;= 100)\n\nWarning: Using one column matrices in `filter()` was deprecated in dplyr 1.1.0.\nℹ Please use one dimensional logical vectors instead.\n\n#Get 5 most populous cities in that zone\ntop5_equidistant &lt;- equidistant_cities %&gt;%\n  arrange(desc(population)) %&gt;%\n  slice(1:5)\n\n#Plot\nggplot(data = cities_with_distances) +\n  geom_sf(aes(color = diff_mex_can), size = 1) +\n  gghighlight(diff_mex_can &lt;= 100, use_direct_label = FALSE) +\n  geom_sf(data = top5_equidistant, color = \"red\", size = 2) +\n  geom_label_repel(\n    data = top5_equidistant,\n    aes(label = paste0(city, \", \", state_name), geometry = geometry),\n    stat = \"sf_coordinates\",\n    size = 3\n  ) +\n  scale_color_viridis_c(name = \"Abs(Mex - Canada Distance) km\") +\n  theme_minimal() +\n  ggtitle(\"Cities Approximately Equidistant from Mexico and Canada (±100 km)\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\nQuestion 4\n4.1: Quantifying border zone\n\n# add column with distance to border\ncities_with_distances &lt;- cities_with_distances %&gt;%\n  mutate(in_border_zone = dist_to_national_km &lt;= 160)\n\n# how many cities are in the border zone\nn_cities_border &lt;- sum(cities_with_distances$in_border_zone)\n\n# Total people in that zone\npop_border &lt;- cities_with_distances %&gt;%\n  filter(in_border_zone) %&gt;%\n  summarise(total_population = sum(population, na.rm = TRUE)) %&gt;%\n  pull(total_population)\n\n# sum total US population\npop_total &lt;- sum(cities_with_distances$population, na.rm = TRUE)\n\n#Percent of population in border zone\npct_border &lt;- round((pop_border / pop_total) * 100, 1)\n\n#Create table\nborder_stats &lt;- data.frame(\n  Metric = c(\n    \"Cities within 100 miles of U.S. border\",\n    \"People living in those cities\",\n    \"Percent of total U.S. city population\"\n  ),\n  Value = c(\n    n_cities_border,\n    format(pop_border, big.mark = \",\"),\n    paste0(pct_border, \"%\")\n  )\n)\n\n#make table \nlibrary(flextable)\nflextable(border_stats)\n\nMetricValueCities within 100 miles of U.S. border12968People living in those cities255,355,775Percent of total U.S. city population64.4%\n\n\nIts even more then the article said! The article said that about 200 million people live in this zone\n4.2: Mapping border zone\n\n#Filter 10 most populous cities in border zone\ntop10_border &lt;- cities_with_distances %&gt;%\n  filter(in_border_zone) %&gt;%\n  arrange(desc(population)) %&gt;%\n  slice(1:10)\n\n# Map it \nggplot(data = cities_with_distances) +\n  geom_sf(aes(color = population), size = 1) +\n  gghighlight(in_border_zone, use_direct_label = FALSE) +\n  scale_color_gradient(low = \"orange\", high = \"darkred\", name = \"Population\") +\n  geom_label_repel(\n    data = top10_border,\n    aes(label = paste0(city, \", \", state_name), geometry = geometry),\n    stat = \"sf_coordinates\",\n    size = 3\n  ) +\n  theme_minimal() +\n  ggtitle(\" Most Populous Cities Within 100 Miles of U.S. National Border\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n4.3: label by the most populous city in each state in the danger zone\n\n# Most populous city per state within 100-mile border zone\ntop_city_per_state_border &lt;- cities_with_distances %&gt;%\n  filter(in_border_zone) %&gt;%\n  group_by(state_name) %&gt;%\n  slice_max(order_by = population, n = 1, with_ties = FALSE) %&gt;%\n  ungroup()\n\n# 2. Map\nggplot(data = cities_with_distances) +\n  geom_sf(aes(color = population), size = 1) +\n  gghighlight(in_border_zone, use_direct_label = FALSE) +\n  scale_color_gradient(low = \"orange\", high = \"darkred\", name = \"Population\") +\n  geom_label_repel(\n    data = top_city_per_state_border,\n    aes(label = paste0(city, \", \", state_name), geometry = geometry),\n    stat = \"sf_coordinates\",\n    size = 3,\n    max.overlaps = 50  \n  ) +\n  theme_minimal() +\n  ggtitle(\"Most Populous City per State Within 100-Mile Border Zone\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nYou have to click on figure to see all the states labeled."
  }
]